FROM ubuntu:bionic

# Similar to Dockerfile, but uses PIP to install dependencies without creating environment
# No user is created. Installs as root.
# Use as example code and modify as needed

# These commands run as root
# Install base dependencies
RUN apt-get update && \
    apt install -y \
        build-essential \
        libmagic-dev \
        libopenblas-dev \
        openjdk-8-jre \
        git \
        locales \
        python3-pip python3-virtualenv\
        unzip \
        wget

RUN locale-gen en_US.UTF-8
ENV LANG="en_US.UTF-8"
ENV LANGUAGE="en_US:en"
ENV LC_ALL="en_US.UTF-8"
ENV HOME="/root"

WORKDIR $HOME

COPY payload/scorer.zip ./
COPY payload/license.sig .driverlessai/

RUN unzip scorer.zip

COPY batch_scorer.py scoring-pipeline

WORKDIR scoring-pipeline

RUN python3 -m virtualenv -p python3.6 env && \
    env/bin/python -m pip install --upgrade --upgrade-strategy only-if-needed pip==19.3.1 pkginfo==1.5.0.1 && \
    env/bin/python -m pip install --upgrade --upgrade-strategy only-if-needed -r requirements.txt -c full_constraints.txt && \
    env/bin/python -m pip uninstall -y tensorflow && \
    env/bin/python -m pip uninstall -y tensorflow-gpu && \
    env/bin/python -m pip install tensorflow==1.13.1 --upgrade --upgrade-strategy only-if-needed -c full_constraints.txt && \
    env/bin/python -m pip install tensorflow_gpu==1.13.1 --upgrade --upgrade-strategy only-if-needed -c full_constraints.txt && \
    tf_path=`env/bin/python -c "import os ; import importlib.util ; tf_loader = importlib.util.find_spec('tensorflow') ; print(os.path.dirname(tf_loader.origin))"` && \
    rm -rf ${tf_path}_cpu && mv ${tf_path} ${tf_path}_cpu && \
    rm -rf ${tf_path}_gpu && mv ${tf_path} ${tf_path}_gpu


RUN import_statement=$(grep -E 'from scoring_h2oai_experiment' example.py) && \
    sed -i "s/INJECT_EXPERIMENT_IMPORT/${import_statement}/g" batch_scorer.py

CMD ["env/bin/python", "batch_scorer.py"]
